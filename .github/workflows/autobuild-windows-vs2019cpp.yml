name: Build Docker - windows-vs2019cpp

on: 
  push:
    branches:
    - 'master'
    - 'release/**'
    tags:
    - '**'
    paths:
    - 'docker/windows-vs2019cpp/**'

env:
  IMAGE_NAME: windows-vs2019cpp
  DOCKERFILE_PATH: docker/windows-vs2019cpp/
  GITHUB_CONTAINER_REGISTRY: ghcr.io
  ALIYUN_HK_REGISTRY: registry.cn-hongkong.aliyuncs.com
  ALIYUN_SH_REGISTRY: registry.cn-shanghai.aliyuncs.com
  TENCENTYUN_HK_REGISTRY: hkccr.ccs.tencentyun.com

jobs:

  build:

    runs-on: windows-2019
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build Docker
      run: |
        cd ${{ env.DOCKERFILE_PATH }}
        docker build -t ${{ env.IMAGE_NAME }} -m 2GB . 

    # - name: Set IMAGE_TAG env # env IMAGE_TAG=BranchName-CommitID-Timestamp
    #   run: echo IMAGE_TAG=$(basename ${GITHUB_REF})-$(echo ${GITHUB_SHA} | cut -c 1-7)-$(date -u +"%Y%m%d") >> ${GITHUB_ENV}
    # - name: Environment Printer
    #   uses: managedkaos/print-env@v1.0

    - name: Publish to Github Container Registry
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin ${{ env.GITHUB_CONTAINER_REGISTRY }}
        docker tag ${{ env.IMAGE_NAME }} ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker logout ${{ env.GITHUB_CONTAINER_REGISTRY }}

  copy-to-dockerhub:
    runs-on: windows-2019
    needs: build
    steps:
    - name: Pull & Push
      run: |
        docker pull ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin 
        docker tag ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
        docker logout 

  copy-to-tencentyun-hk:
    runs-on: windows-2019
    needs: build
    steps:
    - name: Pull & Push
      run: |
        docker pull ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
        echo ${{ secrets.TENCENTYUN_DOCKER_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.TENCENTYUN_DOCKER_REGISTRY_USERNAME }} --password-stdin ${{ env.TENCENTYUN_HK_REGISTRY }}
        docker tag ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }} ${{ env.TENCENTYUN_HK_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.TENCENTYUN_HK_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker logout ${{ env.TENCENTYUN_HK_REGISTRY }}

  copy-to-aliyun-hk:
    runs-on: windows-2019
    needs: build
    steps:
    - name: Pull & Push
      run: |
        docker pull ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
        echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.ALIYUN_REGISTRY_USERNAME }} --password-stdin ${{ env.ALIYUN_HK_REGISTRY }}
        docker tag ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }} ${{ env.ALIYUN_HK_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.ALIYUN_HK_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker logout ${{ env.ALIYUN_HK_REGISTRY }}

  copy-to-aliyun-sh:
    runs-on: windows-2019
    needs: build
    steps:
    - name: Pull & Push
      run: |
        docker pull ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
        echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login -u ${{ secrets.ALIYUN_REGISTRY_USERNAME }} --password-stdin ${{ env.ALIYUN_SH_REGISTRY }}
        docker tag ${{ env.GITHUB_CONTAINER_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }} ${{ env.ALIYUN_SH_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.ALIYUN_SH_REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker logout ${{ env.ALIYUN_SH_REGISTRY }}
