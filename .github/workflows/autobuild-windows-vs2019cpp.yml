name: Build Docker - windows-vs2019cpp

on: 
  push:
    branches:
    - 'master'
    - 'release/**'
    tags:
    - '**'
    paths:
    - 'docker/windows-vs2019cpp/**'

env:
  IMAGE_NAME: windows-vs2019cpp
  DOCKERFILE_PATH: docker/windows-vs2019cpp/

jobs:

  build:

    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build Docker
      run: |
        cd ${{ env.DOCKERFILE_PATH }}
        docker build -t ${{ env.IMAGE_NAME }} -m 2GB . 

    - name: Publish to Github Container Registry
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin ghcr.io
        docker tag ${{ env.IMAGE_NAME }} ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker push ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
        docker logout ghcr.io

    # - name: Set IMAGE_TAG env # env IMAGE_TAG=BranchName-CommitID-Timestamp
    #   run: echo IMAGE_TAG=$(basename ${GITHUB_REF})-$(echo ${GITHUB_SHA} | cut -c 1-7)-$(date -u +"%Y%m%d") >> ${GITHUB_ENV}
    # - name: Environment Printer
    #   uses: managedkaos/print-env@v1.0

    # - name: Build & Publish to Github Container Registry
    #   uses: elgohr/Publish-Docker-Github-Action@master
    #   with:
    #     name: ${{ github.actor }}/${{ env.IMAGE_NAME }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    #     registry: ghcr.io
    #     snapshot: false
    #     workdir: ${{ env.DOCKERFILE_PATH }}
    #     tags: "latest"
    #     #tags: "latest,${{ env.IMAGE_TAG }}"
    #     #buildargs: "IMAGE_TAG=${{ env.IMAGE_TAG }}"

  #   - name: Build & Publish to DockerHub
  #     uses: elgohr/Publish-Docker-Github-Action@master
  #     with:
  #       name: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}
  #       snapshot: false
  #       workdir: ${{ env.DOCKERFILE_PATH }}
  #       tags: "latest,${{ env.IMAGE_TAG }}"
  #       buildargs: "IMAGE_TAG=${{ env.IMAGE_TAG }}"

  # copy-to-aliyun-hk:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: onichandame/docker-registry-sync-action@master
  #     with:
  #       source_repository: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
  #       target_repository: registry.cn-hongkong.aliyuncs.com/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
  #       target_username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
  #       target_password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

  # copy-to-tencentyun-hk:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - uses: onichandame/docker-registry-sync-action@master
  #     with:
  #       source_repository: ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
  #       target_repository: hkccr.ccs.tencentyun.com/${{ github.actor }}/${{ env.IMAGE_NAME }}:latest
  #       target_username: ${{ secrets.TENCENTYUN_DOCKER_REGISTRY_USERNAME }}
  #       target_password: ${{ secrets.TENCENTYUN_DOCKER_REGISTRY_PASSWORD }}
